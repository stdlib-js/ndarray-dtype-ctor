// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-struct-constructor-like@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type-string@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-enum@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-desc@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-char@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-alignment@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-bytes-per-element@v0.2.2-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtypes@v0.3.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function y(o,d){var j,f,v;if(j=arguments.length,!(this instanceof y))return j<2?new y(o):new y(o,d);if(s(o))f="builtin";else{if(!t(o)){if(function(t){return"object"==typeof t&&null!==t&&"DataType"===t.constructor.name&&r(t.char)&&r(t.description)&&r(t.byteOrder)&&i(t,"value")}(o))return new y(o.value,{description:o.description});throw new TypeError(u("invalid argument. First argument must be either a supported data type string, a struct constructor, or another data type instance. Value: `%s`.",o))}f="struct"}if(j>1){if(!e(v=d))throw new TypeError(u("null2V",v));if(n(v,"description")&&!r(v.description))throw new TypeError(u("null2W","description",v.description))}else v={};return this._value=o,this._description=v.description||a(o)||"",this._char=m(o)||"",this._enum=p(o)||c.userdefined_type,this._alignment=h(o)||-1,this._byteLength=l(o)||-1,this._byteOrder="host",this._type=f,this}d(y,"name","DataType"),o(y.prototype,"alignment",(function(){return this._alignment})),o(y.prototype,"byteLength",(function(){return this._byteLength})),o(y.prototype,"byteOrder",(function(){return this._byteOrder})),o(y.prototype,"char",(function(){return this._char})),o(y.prototype,"description",(function(){return this._description})),o(y.prototype,"enum",(function(){return this._enum})),o(y.prototype,"value",(function(){return this._value})),d(y.prototype,"toJSON",(function(){return{type:"DataType",value:this.toString(),byteOrder:this._byteOrder,description:this._description}})),d(y.prototype,"toString",(function(){return"struct"===this._type?this._value.layout:String(this._value)})),d(y.prototype,"valueOf",(function(){return this.toString()}));export{y as default};
//# sourceMappingURL=index.mjs.map
